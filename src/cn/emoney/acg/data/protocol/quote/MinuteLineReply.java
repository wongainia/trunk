package cn.emoney.acg.data.protocol.quote;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MinuteLine_Reply.proto

public final class MinuteLineReply {
  private MinuteLineReply() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MinuteLine_ReplyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .MinuteLine_Reply.MinuteData trend_line = 6;
    /**
     * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
     *
     * <pre>
     * 分时线数组
     * </pre>
     */
    java.util.List<MinuteLineReply.MinuteLine_Reply.MinuteData> 
        getTrendLineList();
    /**
     * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
     *
     * <pre>
     * 分时线数组
     * </pre>
     */
    MinuteLineReply.MinuteLine_Reply.MinuteData getTrendLine(int index);
    /**
     * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
     *
     * <pre>
     * 分时线数组
     * </pre>
     */
    int getTrendLineCount();
    /**
     * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
     *
     * <pre>
     * 分时线数组
     * </pre>
     */
    java.util.List<? extends MinuteLineReply.MinuteLine_Reply.MinuteDataOrBuilder> 
        getTrendLineOrBuilderList();
    /**
     * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
     *
     * <pre>
     * 分时线数组
     * </pre>
     */
    MinuteLineReply.MinuteLine_Reply.MinuteDataOrBuilder getTrendLineOrBuilder(
        int index);

    // required uint32 close = 7;
    /**
     * <code>required uint32 close = 7;</code>
     *
     * <pre>
     * 昨收
     * </pre>
     */
    boolean hasClose();
    /**
     * <code>required uint32 close = 7;</code>
     *
     * <pre>
     * 昨收
     * </pre>
     */
    int getClose();

    // required uint32 goods_id = 8;
    /**
     * <code>required uint32 goods_id = 8;</code>
     *
     * <pre>
     * 股票ID	
     * </pre>
     */
    boolean hasGoodsId();
    /**
     * <code>required uint32 goods_id = 8;</code>
     *
     * <pre>
     * 股票ID	
     * </pre>
     */
    int getGoodsId();

    // required uint32 market_date = 9;
    /**
     * <code>required uint32 market_date = 9;</code>
     *
     * <pre>
     * 交易日期YYYYMMDD
     * </pre>
     */
    boolean hasMarketDate();
    /**
     * <code>required uint32 market_date = 9;</code>
     *
     * <pre>
     * 交易日期YYYYMMDD
     * </pre>
     */
    int getMarketDate();

    // repeated uint32 mmp = 10;
    /**
     * <code>repeated uint32 mmp = 10;</code>
     *
     * <pre>
     * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
     * </pre>
     */
    java.util.List<java.lang.Integer> getMmpList();
    /**
     * <code>repeated uint32 mmp = 10;</code>
     *
     * <pre>
     * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
     * </pre>
     */
    int getMmpCount();
    /**
     * <code>repeated uint32 mmp = 10;</code>
     *
     * <pre>
     * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
     * </pre>
     */
    int getMmp(int index);
  }
  /**
   * Protobuf type {@code MinuteLine_Reply}
   */
  public static final class MinuteLine_Reply extends
      com.google.protobuf.GeneratedMessage
      implements MinuteLine_ReplyOrBuilder {
    // Use MinuteLine_Reply.newBuilder() to construct.
    private MinuteLine_Reply(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MinuteLine_Reply(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MinuteLine_Reply defaultInstance;
    public static MinuteLine_Reply getDefaultInstance() {
      return defaultInstance;
    }

    public MinuteLine_Reply getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MinuteLine_Reply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                trendLine_ = new java.util.ArrayList<MinuteLineReply.MinuteLine_Reply.MinuteData>();
                mutable_bitField0_ |= 0x00000001;
              }
              trendLine_.add(input.readMessage(MinuteLineReply.MinuteLine_Reply.MinuteData.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              bitField0_ |= 0x00000001;
              close_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000002;
              goodsId_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000004;
              marketDate_ = input.readUInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                mmp_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              mmp_.add(input.readUInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                mmp_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                mmp_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          trendLine_ = java.util.Collections.unmodifiableList(trendLine_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          mmp_ = java.util.Collections.unmodifiableList(mmp_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MinuteLineReply.internal_static_MinuteLine_Reply_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MinuteLineReply.internal_static_MinuteLine_Reply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MinuteLineReply.MinuteLine_Reply.class, MinuteLineReply.MinuteLine_Reply.Builder.class);
    }

    public static com.google.protobuf.Parser<MinuteLine_Reply> PARSER =
        new com.google.protobuf.AbstractParser<MinuteLine_Reply>() {
      public MinuteLine_Reply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MinuteLine_Reply(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MinuteLine_Reply> getParserForType() {
      return PARSER;
    }

    public interface MinuteDataOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required uint32 time = 1;
      /**
       * <code>required uint32 time = 1;</code>
       *
       * <pre>
       * 时间HHMM
       * </pre>
       */
      boolean hasTime();
      /**
       * <code>required uint32 time = 1;</code>
       *
       * <pre>
       * 时间HHMM
       * </pre>
       */
      int getTime();

      // required uint32 price = 2;
      /**
       * <code>required uint32 price = 2;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      boolean hasPrice();
      /**
       * <code>required uint32 price = 2;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      int getPrice();

      // required uint32 ave = 3;
      /**
       * <code>required uint32 ave = 3;</code>
       *
       * <pre>
       * 均价
       * </pre>
       */
      boolean hasAve();
      /**
       * <code>required uint32 ave = 3;</code>
       *
       * <pre>
       * 均价
       * </pre>
       */
      int getAve();

      // required uint64 volume = 4;
      /**
       * <code>required uint64 volume = 4;</code>
       *
       * <pre>
       * 量,从开盘到该时间点位置的总手，手
       * </pre>
       */
      boolean hasVolume();
      /**
       * <code>required uint64 volume = 4;</code>
       *
       * <pre>
       * 量,从开盘到该时间点位置的总手，手
       * </pre>
       */
      long getVolume();

      // required uint64 amount = 5;
      /**
       * <code>required uint64 amount = 5;</code>
       *
       * <pre>
       * 额，从开盘到该时间点位置的总金额，千元
       * </pre>
       */
      boolean hasAmount();
      /**
       * <code>required uint64 amount = 5;</code>
       *
       * <pre>
       * 额，从开盘到该时间点位置的总金额，千元
       * </pre>
       */
      long getAmount();
    }
    /**
     * Protobuf type {@code MinuteLine_Reply.MinuteData}
     */
    public static final class MinuteData extends
        com.google.protobuf.GeneratedMessage
        implements MinuteDataOrBuilder {
      // Use MinuteData.newBuilder() to construct.
      private MinuteData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private MinuteData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final MinuteData defaultInstance;
      public static MinuteData getDefaultInstance() {
        return defaultInstance;
      }

      public MinuteData getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private MinuteData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                time_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                price_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                ave_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                volume_ = input.readUInt64();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                amount_ = input.readUInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MinuteLineReply.internal_static_MinuteLine_Reply_MinuteData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MinuteLineReply.internal_static_MinuteLine_Reply_MinuteData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MinuteLineReply.MinuteLine_Reply.MinuteData.class, MinuteLineReply.MinuteLine_Reply.MinuteData.Builder.class);
      }

      public static com.google.protobuf.Parser<MinuteData> PARSER =
          new com.google.protobuf.AbstractParser<MinuteData>() {
        public MinuteData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MinuteData(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<MinuteData> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required uint32 time = 1;
      public static final int TIME_FIELD_NUMBER = 1;
      private int time_;
      /**
       * <code>required uint32 time = 1;</code>
       *
       * <pre>
       * 时间HHMM
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 time = 1;</code>
       *
       * <pre>
       * 时间HHMM
       * </pre>
       */
      public int getTime() {
        return time_;
      }

      // required uint32 price = 2;
      public static final int PRICE_FIELD_NUMBER = 2;
      private int price_;
      /**
       * <code>required uint32 price = 2;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 price = 2;</code>
       *
       * <pre>
       * 价格
       * </pre>
       */
      public int getPrice() {
        return price_;
      }

      // required uint32 ave = 3;
      public static final int AVE_FIELD_NUMBER = 3;
      private int ave_;
      /**
       * <code>required uint32 ave = 3;</code>
       *
       * <pre>
       * 均价
       * </pre>
       */
      public boolean hasAve() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 ave = 3;</code>
       *
       * <pre>
       * 均价
       * </pre>
       */
      public int getAve() {
        return ave_;
      }

      // required uint64 volume = 4;
      public static final int VOLUME_FIELD_NUMBER = 4;
      private long volume_;
      /**
       * <code>required uint64 volume = 4;</code>
       *
       * <pre>
       * 量,从开盘到该时间点位置的总手，手
       * </pre>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint64 volume = 4;</code>
       *
       * <pre>
       * 量,从开盘到该时间点位置的总手，手
       * </pre>
       */
      public long getVolume() {
        return volume_;
      }

      // required uint64 amount = 5;
      public static final int AMOUNT_FIELD_NUMBER = 5;
      private long amount_;
      /**
       * <code>required uint64 amount = 5;</code>
       *
       * <pre>
       * 额，从开盘到该时间点位置的总金额，千元
       * </pre>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint64 amount = 5;</code>
       *
       * <pre>
       * 额，从开盘到该时间点位置的总金额，千元
       * </pre>
       */
      public long getAmount() {
        return amount_;
      }

      private void initFields() {
        time_ = 0;
        price_ = 0;
        ave_ = 0;
        volume_ = 0L;
        amount_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasTime()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPrice()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasAve()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasVolume()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasAmount()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, time_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, price_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, ave_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, volume_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt64(5, amount_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, time_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, price_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, ave_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, volume_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(5, amount_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static MinuteLineReply.MinuteLine_Reply.MinuteData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MinuteLineReply.MinuteLine_Reply.MinuteData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MinuteLineReply.MinuteLine_Reply.MinuteData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MinuteLineReply.MinuteLine_Reply.MinuteData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MinuteLineReply.MinuteLine_Reply.MinuteData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static MinuteLineReply.MinuteLine_Reply.MinuteData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static MinuteLineReply.MinuteLine_Reply.MinuteData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static MinuteLineReply.MinuteLine_Reply.MinuteData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static MinuteLineReply.MinuteLine_Reply.MinuteData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static MinuteLineReply.MinuteLine_Reply.MinuteData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MinuteLineReply.MinuteLine_Reply.MinuteData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code MinuteLine_Reply.MinuteData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements MinuteLineReply.MinuteLine_Reply.MinuteDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MinuteLineReply.internal_static_MinuteLine_Reply_MinuteData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MinuteLineReply.internal_static_MinuteLine_Reply_MinuteData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MinuteLineReply.MinuteLine_Reply.MinuteData.class, MinuteLineReply.MinuteLine_Reply.MinuteData.Builder.class);
        }

        // Construct using MinuteLineReply.MinuteLine_Reply.MinuteData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          time_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          price_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          ave_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          volume_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          amount_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MinuteLineReply.internal_static_MinuteLine_Reply_MinuteData_descriptor;
        }

        public MinuteLineReply.MinuteLine_Reply.MinuteData getDefaultInstanceForType() {
          return MinuteLineReply.MinuteLine_Reply.MinuteData.getDefaultInstance();
        }

        public MinuteLineReply.MinuteLine_Reply.MinuteData build() {
          MinuteLineReply.MinuteLine_Reply.MinuteData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MinuteLineReply.MinuteLine_Reply.MinuteData buildPartial() {
          MinuteLineReply.MinuteLine_Reply.MinuteData result = new MinuteLineReply.MinuteLine_Reply.MinuteData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.time_ = time_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.price_ = price_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.ave_ = ave_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.volume_ = volume_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.amount_ = amount_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MinuteLineReply.MinuteLine_Reply.MinuteData) {
            return mergeFrom((MinuteLineReply.MinuteLine_Reply.MinuteData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MinuteLineReply.MinuteLine_Reply.MinuteData other) {
          if (other == MinuteLineReply.MinuteLine_Reply.MinuteData.getDefaultInstance()) return this;
          if (other.hasTime()) {
            setTime(other.getTime());
          }
          if (other.hasPrice()) {
            setPrice(other.getPrice());
          }
          if (other.hasAve()) {
            setAve(other.getAve());
          }
          if (other.hasVolume()) {
            setVolume(other.getVolume());
          }
          if (other.hasAmount()) {
            setAmount(other.getAmount());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasTime()) {
            
            return false;
          }
          if (!hasPrice()) {
            
            return false;
          }
          if (!hasAve()) {
            
            return false;
          }
          if (!hasVolume()) {
            
            return false;
          }
          if (!hasAmount()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MinuteLineReply.MinuteLine_Reply.MinuteData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MinuteLineReply.MinuteLine_Reply.MinuteData) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required uint32 time = 1;
        private int time_ ;
        /**
         * <code>required uint32 time = 1;</code>
         *
         * <pre>
         * 时间HHMM
         * </pre>
         */
        public boolean hasTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint32 time = 1;</code>
         *
         * <pre>
         * 时间HHMM
         * </pre>
         */
        public int getTime() {
          return time_;
        }
        /**
         * <code>required uint32 time = 1;</code>
         *
         * <pre>
         * 时间HHMM
         * </pre>
         */
        public Builder setTime(int value) {
          bitField0_ |= 0x00000001;
          time_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint32 time = 1;</code>
         *
         * <pre>
         * 时间HHMM
         * </pre>
         */
        public Builder clearTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          time_ = 0;
          onChanged();
          return this;
        }

        // required uint32 price = 2;
        private int price_ ;
        /**
         * <code>required uint32 price = 2;</code>
         *
         * <pre>
         * 价格
         * </pre>
         */
        public boolean hasPrice() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required uint32 price = 2;</code>
         *
         * <pre>
         * 价格
         * </pre>
         */
        public int getPrice() {
          return price_;
        }
        /**
         * <code>required uint32 price = 2;</code>
         *
         * <pre>
         * 价格
         * </pre>
         */
        public Builder setPrice(int value) {
          bitField0_ |= 0x00000002;
          price_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint32 price = 2;</code>
         *
         * <pre>
         * 价格
         * </pre>
         */
        public Builder clearPrice() {
          bitField0_ = (bitField0_ & ~0x00000002);
          price_ = 0;
          onChanged();
          return this;
        }

        // required uint32 ave = 3;
        private int ave_ ;
        /**
         * <code>required uint32 ave = 3;</code>
         *
         * <pre>
         * 均价
         * </pre>
         */
        public boolean hasAve() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required uint32 ave = 3;</code>
         *
         * <pre>
         * 均价
         * </pre>
         */
        public int getAve() {
          return ave_;
        }
        /**
         * <code>required uint32 ave = 3;</code>
         *
         * <pre>
         * 均价
         * </pre>
         */
        public Builder setAve(int value) {
          bitField0_ |= 0x00000004;
          ave_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint32 ave = 3;</code>
         *
         * <pre>
         * 均价
         * </pre>
         */
        public Builder clearAve() {
          bitField0_ = (bitField0_ & ~0x00000004);
          ave_ = 0;
          onChanged();
          return this;
        }

        // required uint64 volume = 4;
        private long volume_ ;
        /**
         * <code>required uint64 volume = 4;</code>
         *
         * <pre>
         * 量,从开盘到该时间点位置的总手，手
         * </pre>
         */
        public boolean hasVolume() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required uint64 volume = 4;</code>
         *
         * <pre>
         * 量,从开盘到该时间点位置的总手，手
         * </pre>
         */
        public long getVolume() {
          return volume_;
        }
        /**
         * <code>required uint64 volume = 4;</code>
         *
         * <pre>
         * 量,从开盘到该时间点位置的总手，手
         * </pre>
         */
        public Builder setVolume(long value) {
          bitField0_ |= 0x00000008;
          volume_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 volume = 4;</code>
         *
         * <pre>
         * 量,从开盘到该时间点位置的总手，手
         * </pre>
         */
        public Builder clearVolume() {
          bitField0_ = (bitField0_ & ~0x00000008);
          volume_ = 0L;
          onChanged();
          return this;
        }

        // required uint64 amount = 5;
        private long amount_ ;
        /**
         * <code>required uint64 amount = 5;</code>
         *
         * <pre>
         * 额，从开盘到该时间点位置的总金额，千元
         * </pre>
         */
        public boolean hasAmount() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required uint64 amount = 5;</code>
         *
         * <pre>
         * 额，从开盘到该时间点位置的总金额，千元
         * </pre>
         */
        public long getAmount() {
          return amount_;
        }
        /**
         * <code>required uint64 amount = 5;</code>
         *
         * <pre>
         * 额，从开盘到该时间点位置的总金额，千元
         * </pre>
         */
        public Builder setAmount(long value) {
          bitField0_ |= 0x00000010;
          amount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 amount = 5;</code>
         *
         * <pre>
         * 额，从开盘到该时间点位置的总金额，千元
         * </pre>
         */
        public Builder clearAmount() {
          bitField0_ = (bitField0_ & ~0x00000010);
          amount_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:MinuteLine_Reply.MinuteData)
      }

      static {
        defaultInstance = new MinuteData(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:MinuteLine_Reply.MinuteData)
    }

    private int bitField0_;
    // repeated .MinuteLine_Reply.MinuteData trend_line = 6;
    public static final int TREND_LINE_FIELD_NUMBER = 6;
    private java.util.List<MinuteLineReply.MinuteLine_Reply.MinuteData> trendLine_;
    /**
     * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
     *
     * <pre>
     * 分时线数组
     * </pre>
     */
    public java.util.List<MinuteLineReply.MinuteLine_Reply.MinuteData> getTrendLineList() {
      return trendLine_;
    }
    /**
     * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
     *
     * <pre>
     * 分时线数组
     * </pre>
     */
    public java.util.List<? extends MinuteLineReply.MinuteLine_Reply.MinuteDataOrBuilder> 
        getTrendLineOrBuilderList() {
      return trendLine_;
    }
    /**
     * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
     *
     * <pre>
     * 分时线数组
     * </pre>
     */
    public int getTrendLineCount() {
      return trendLine_.size();
    }
    /**
     * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
     *
     * <pre>
     * 分时线数组
     * </pre>
     */
    public MinuteLineReply.MinuteLine_Reply.MinuteData getTrendLine(int index) {
      return trendLine_.get(index);
    }
    /**
     * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
     *
     * <pre>
     * 分时线数组
     * </pre>
     */
    public MinuteLineReply.MinuteLine_Reply.MinuteDataOrBuilder getTrendLineOrBuilder(
        int index) {
      return trendLine_.get(index);
    }

    // required uint32 close = 7;
    public static final int CLOSE_FIELD_NUMBER = 7;
    private int close_;
    /**
     * <code>required uint32 close = 7;</code>
     *
     * <pre>
     * 昨收
     * </pre>
     */
    public boolean hasClose() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 close = 7;</code>
     *
     * <pre>
     * 昨收
     * </pre>
     */
    public int getClose() {
      return close_;
    }

    // required uint32 goods_id = 8;
    public static final int GOODS_ID_FIELD_NUMBER = 8;
    private int goodsId_;
    /**
     * <code>required uint32 goods_id = 8;</code>
     *
     * <pre>
     * 股票ID	
     * </pre>
     */
    public boolean hasGoodsId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 goods_id = 8;</code>
     *
     * <pre>
     * 股票ID	
     * </pre>
     */
    public int getGoodsId() {
      return goodsId_;
    }

    // required uint32 market_date = 9;
    public static final int MARKET_DATE_FIELD_NUMBER = 9;
    private int marketDate_;
    /**
     * <code>required uint32 market_date = 9;</code>
     *
     * <pre>
     * 交易日期YYYYMMDD
     * </pre>
     */
    public boolean hasMarketDate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 market_date = 9;</code>
     *
     * <pre>
     * 交易日期YYYYMMDD
     * </pre>
     */
    public int getMarketDate() {
      return marketDate_;
    }

    // repeated uint32 mmp = 10;
    public static final int MMP_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> mmp_;
    /**
     * <code>repeated uint32 mmp = 10;</code>
     *
     * <pre>
     * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMmpList() {
      return mmp_;
    }
    /**
     * <code>repeated uint32 mmp = 10;</code>
     *
     * <pre>
     * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
     * </pre>
     */
    public int getMmpCount() {
      return mmp_.size();
    }
    /**
     * <code>repeated uint32 mmp = 10;</code>
     *
     * <pre>
     * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
     * </pre>
     */
    public int getMmp(int index) {
      return mmp_.get(index);
    }

    private void initFields() {
      trendLine_ = java.util.Collections.emptyList();
      close_ = 0;
      goodsId_ = 0;
      marketDate_ = 0;
      mmp_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasClose()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGoodsId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMarketDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTrendLineCount(); i++) {
        if (!getTrendLine(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < trendLine_.size(); i++) {
        output.writeMessage(6, trendLine_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(7, close_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(8, goodsId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(9, marketDate_);
      }
      for (int i = 0; i < mmp_.size(); i++) {
        output.writeUInt32(10, mmp_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < trendLine_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, trendLine_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, close_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, goodsId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, marketDate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mmp_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(mmp_.get(i));
        }
        size += dataSize;
        size += 1 * getMmpList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MinuteLineReply.MinuteLine_Reply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MinuteLineReply.MinuteLine_Reply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MinuteLineReply.MinuteLine_Reply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MinuteLineReply.MinuteLine_Reply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MinuteLineReply.MinuteLine_Reply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MinuteLineReply.MinuteLine_Reply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MinuteLineReply.MinuteLine_Reply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MinuteLineReply.MinuteLine_Reply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MinuteLineReply.MinuteLine_Reply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MinuteLineReply.MinuteLine_Reply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MinuteLineReply.MinuteLine_Reply prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MinuteLine_Reply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MinuteLineReply.MinuteLine_ReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MinuteLineReply.internal_static_MinuteLine_Reply_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MinuteLineReply.internal_static_MinuteLine_Reply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MinuteLineReply.MinuteLine_Reply.class, MinuteLineReply.MinuteLine_Reply.Builder.class);
      }

      // Construct using MinuteLineReply.MinuteLine_Reply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTrendLineFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (trendLineBuilder_ == null) {
          trendLine_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          trendLineBuilder_.clear();
        }
        close_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        goodsId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        marketDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        mmp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MinuteLineReply.internal_static_MinuteLine_Reply_descriptor;
      }

      public MinuteLineReply.MinuteLine_Reply getDefaultInstanceForType() {
        return MinuteLineReply.MinuteLine_Reply.getDefaultInstance();
      }

      public MinuteLineReply.MinuteLine_Reply build() {
        MinuteLineReply.MinuteLine_Reply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MinuteLineReply.MinuteLine_Reply buildPartial() {
        MinuteLineReply.MinuteLine_Reply result = new MinuteLineReply.MinuteLine_Reply(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (trendLineBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            trendLine_ = java.util.Collections.unmodifiableList(trendLine_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.trendLine_ = trendLine_;
        } else {
          result.trendLine_ = trendLineBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.close_ = close_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.goodsId_ = goodsId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.marketDate_ = marketDate_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          mmp_ = java.util.Collections.unmodifiableList(mmp_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.mmp_ = mmp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MinuteLineReply.MinuteLine_Reply) {
          return mergeFrom((MinuteLineReply.MinuteLine_Reply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MinuteLineReply.MinuteLine_Reply other) {
        if (other == MinuteLineReply.MinuteLine_Reply.getDefaultInstance()) return this;
        if (trendLineBuilder_ == null) {
          if (!other.trendLine_.isEmpty()) {
            if (trendLine_.isEmpty()) {
              trendLine_ = other.trendLine_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTrendLineIsMutable();
              trendLine_.addAll(other.trendLine_);
            }
            onChanged();
          }
        } else {
          if (!other.trendLine_.isEmpty()) {
            if (trendLineBuilder_.isEmpty()) {
              trendLineBuilder_.dispose();
              trendLineBuilder_ = null;
              trendLine_ = other.trendLine_;
              bitField0_ = (bitField0_ & ~0x00000001);
              trendLineBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTrendLineFieldBuilder() : null;
            } else {
              trendLineBuilder_.addAllMessages(other.trendLine_);
            }
          }
        }
        if (other.hasClose()) {
          setClose(other.getClose());
        }
        if (other.hasGoodsId()) {
          setGoodsId(other.getGoodsId());
        }
        if (other.hasMarketDate()) {
          setMarketDate(other.getMarketDate());
        }
        if (!other.mmp_.isEmpty()) {
          if (mmp_.isEmpty()) {
            mmp_ = other.mmp_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureMmpIsMutable();
            mmp_.addAll(other.mmp_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClose()) {
          
          return false;
        }
        if (!hasGoodsId()) {
          
          return false;
        }
        if (!hasMarketDate()) {
          
          return false;
        }
        for (int i = 0; i < getTrendLineCount(); i++) {
          if (!getTrendLine(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MinuteLineReply.MinuteLine_Reply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MinuteLineReply.MinuteLine_Reply) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .MinuteLine_Reply.MinuteData trend_line = 6;
      private java.util.List<MinuteLineReply.MinuteLine_Reply.MinuteData> trendLine_ =
        java.util.Collections.emptyList();
      private void ensureTrendLineIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          trendLine_ = new java.util.ArrayList<MinuteLineReply.MinuteLine_Reply.MinuteData>(trendLine_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          MinuteLineReply.MinuteLine_Reply.MinuteData, MinuteLineReply.MinuteLine_Reply.MinuteData.Builder, MinuteLineReply.MinuteLine_Reply.MinuteDataOrBuilder> trendLineBuilder_;

      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public java.util.List<MinuteLineReply.MinuteLine_Reply.MinuteData> getTrendLineList() {
        if (trendLineBuilder_ == null) {
          return java.util.Collections.unmodifiableList(trendLine_);
        } else {
          return trendLineBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public int getTrendLineCount() {
        if (trendLineBuilder_ == null) {
          return trendLine_.size();
        } else {
          return trendLineBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public MinuteLineReply.MinuteLine_Reply.MinuteData getTrendLine(int index) {
        if (trendLineBuilder_ == null) {
          return trendLine_.get(index);
        } else {
          return trendLineBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public Builder setTrendLine(
          int index, MinuteLineReply.MinuteLine_Reply.MinuteData value) {
        if (trendLineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrendLineIsMutable();
          trendLine_.set(index, value);
          onChanged();
        } else {
          trendLineBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public Builder setTrendLine(
          int index, MinuteLineReply.MinuteLine_Reply.MinuteData.Builder builderForValue) {
        if (trendLineBuilder_ == null) {
          ensureTrendLineIsMutable();
          trendLine_.set(index, builderForValue.build());
          onChanged();
        } else {
          trendLineBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public Builder addTrendLine(MinuteLineReply.MinuteLine_Reply.MinuteData value) {
        if (trendLineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrendLineIsMutable();
          trendLine_.add(value);
          onChanged();
        } else {
          trendLineBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public Builder addTrendLine(
          int index, MinuteLineReply.MinuteLine_Reply.MinuteData value) {
        if (trendLineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTrendLineIsMutable();
          trendLine_.add(index, value);
          onChanged();
        } else {
          trendLineBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public Builder addTrendLine(
          MinuteLineReply.MinuteLine_Reply.MinuteData.Builder builderForValue) {
        if (trendLineBuilder_ == null) {
          ensureTrendLineIsMutable();
          trendLine_.add(builderForValue.build());
          onChanged();
        } else {
          trendLineBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public Builder addTrendLine(
          int index, MinuteLineReply.MinuteLine_Reply.MinuteData.Builder builderForValue) {
        if (trendLineBuilder_ == null) {
          ensureTrendLineIsMutable();
          trendLine_.add(index, builderForValue.build());
          onChanged();
        } else {
          trendLineBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public Builder addAllTrendLine(
          java.lang.Iterable<? extends MinuteLineReply.MinuteLine_Reply.MinuteData> values) {
        if (trendLineBuilder_ == null) {
          ensureTrendLineIsMutable();
          super.addAll(values, trendLine_);
          onChanged();
        } else {
          trendLineBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public Builder clearTrendLine() {
        if (trendLineBuilder_ == null) {
          trendLine_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          trendLineBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public Builder removeTrendLine(int index) {
        if (trendLineBuilder_ == null) {
          ensureTrendLineIsMutable();
          trendLine_.remove(index);
          onChanged();
        } else {
          trendLineBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public MinuteLineReply.MinuteLine_Reply.MinuteData.Builder getTrendLineBuilder(
          int index) {
        return getTrendLineFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public MinuteLineReply.MinuteLine_Reply.MinuteDataOrBuilder getTrendLineOrBuilder(
          int index) {
        if (trendLineBuilder_ == null) {
          return trendLine_.get(index);  } else {
          return trendLineBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public java.util.List<? extends MinuteLineReply.MinuteLine_Reply.MinuteDataOrBuilder> 
           getTrendLineOrBuilderList() {
        if (trendLineBuilder_ != null) {
          return trendLineBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(trendLine_);
        }
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public MinuteLineReply.MinuteLine_Reply.MinuteData.Builder addTrendLineBuilder() {
        return getTrendLineFieldBuilder().addBuilder(
            MinuteLineReply.MinuteLine_Reply.MinuteData.getDefaultInstance());
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public MinuteLineReply.MinuteLine_Reply.MinuteData.Builder addTrendLineBuilder(
          int index) {
        return getTrendLineFieldBuilder().addBuilder(
            index, MinuteLineReply.MinuteLine_Reply.MinuteData.getDefaultInstance());
      }
      /**
       * <code>repeated .MinuteLine_Reply.MinuteData trend_line = 6;</code>
       *
       * <pre>
       * 分时线数组
       * </pre>
       */
      public java.util.List<MinuteLineReply.MinuteLine_Reply.MinuteData.Builder> 
           getTrendLineBuilderList() {
        return getTrendLineFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          MinuteLineReply.MinuteLine_Reply.MinuteData, MinuteLineReply.MinuteLine_Reply.MinuteData.Builder, MinuteLineReply.MinuteLine_Reply.MinuteDataOrBuilder> 
          getTrendLineFieldBuilder() {
        if (trendLineBuilder_ == null) {
          trendLineBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              MinuteLineReply.MinuteLine_Reply.MinuteData, MinuteLineReply.MinuteLine_Reply.MinuteData.Builder, MinuteLineReply.MinuteLine_Reply.MinuteDataOrBuilder>(
                  trendLine_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          trendLine_ = null;
        }
        return trendLineBuilder_;
      }

      // required uint32 close = 7;
      private int close_ ;
      /**
       * <code>required uint32 close = 7;</code>
       *
       * <pre>
       * 昨收
       * </pre>
       */
      public boolean hasClose() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 close = 7;</code>
       *
       * <pre>
       * 昨收
       * </pre>
       */
      public int getClose() {
        return close_;
      }
      /**
       * <code>required uint32 close = 7;</code>
       *
       * <pre>
       * 昨收
       * </pre>
       */
      public Builder setClose(int value) {
        bitField0_ |= 0x00000002;
        close_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 close = 7;</code>
       *
       * <pre>
       * 昨收
       * </pre>
       */
      public Builder clearClose() {
        bitField0_ = (bitField0_ & ~0x00000002);
        close_ = 0;
        onChanged();
        return this;
      }

      // required uint32 goods_id = 8;
      private int goodsId_ ;
      /**
       * <code>required uint32 goods_id = 8;</code>
       *
       * <pre>
       * 股票ID	
       * </pre>
       */
      public boolean hasGoodsId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 goods_id = 8;</code>
       *
       * <pre>
       * 股票ID	
       * </pre>
       */
      public int getGoodsId() {
        return goodsId_;
      }
      /**
       * <code>required uint32 goods_id = 8;</code>
       *
       * <pre>
       * 股票ID	
       * </pre>
       */
      public Builder setGoodsId(int value) {
        bitField0_ |= 0x00000004;
        goodsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 goods_id = 8;</code>
       *
       * <pre>
       * 股票ID	
       * </pre>
       */
      public Builder clearGoodsId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        goodsId_ = 0;
        onChanged();
        return this;
      }

      // required uint32 market_date = 9;
      private int marketDate_ ;
      /**
       * <code>required uint32 market_date = 9;</code>
       *
       * <pre>
       * 交易日期YYYYMMDD
       * </pre>
       */
      public boolean hasMarketDate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 market_date = 9;</code>
       *
       * <pre>
       * 交易日期YYYYMMDD
       * </pre>
       */
      public int getMarketDate() {
        return marketDate_;
      }
      /**
       * <code>required uint32 market_date = 9;</code>
       *
       * <pre>
       * 交易日期YYYYMMDD
       * </pre>
       */
      public Builder setMarketDate(int value) {
        bitField0_ |= 0x00000008;
        marketDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 market_date = 9;</code>
       *
       * <pre>
       * 交易日期YYYYMMDD
       * </pre>
       */
      public Builder clearMarketDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        marketDate_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 mmp = 10;
      private java.util.List<java.lang.Integer> mmp_ = java.util.Collections.emptyList();
      private void ensureMmpIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          mmp_ = new java.util.ArrayList<java.lang.Integer>(mmp_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 mmp = 10;</code>
       *
       * <pre>
       * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMmpList() {
        return java.util.Collections.unmodifiableList(mmp_);
      }
      /**
       * <code>repeated uint32 mmp = 10;</code>
       *
       * <pre>
       * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
       * </pre>
       */
      public int getMmpCount() {
        return mmp_.size();
      }
      /**
       * <code>repeated uint32 mmp = 10;</code>
       *
       * <pre>
       * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
       * </pre>
       */
      public int getMmp(int index) {
        return mmp_.get(index);
      }
      /**
       * <code>repeated uint32 mmp = 10;</code>
       *
       * <pre>
       * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
       * </pre>
       */
      public Builder setMmp(
          int index, int value) {
        ensureMmpIsMutable();
        mmp_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 mmp = 10;</code>
       *
       * <pre>
       * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
       * </pre>
       */
      public Builder addMmp(int value) {
        ensureMmpIsMutable();
        mmp_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 mmp = 10;</code>
       *
       * <pre>
       * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
       * </pre>
       */
      public Builder addAllMmp(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMmpIsMutable();
        super.addAll(values, mmp_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 mmp = 10;</code>
       *
       * <pre>
       * 买卖盘回包定义 20个	[卖价5--卖价1,买价1---买价5,卖量5---卖量1,买量1-买量5]
       * </pre>
       */
      public Builder clearMmp() {
        mmp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MinuteLine_Reply)
    }

    static {
      defaultInstance = new MinuteLine_Reply(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MinuteLine_Reply)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MinuteLine_Reply_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MinuteLine_Reply_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MinuteLine_Reply_MinuteData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MinuteLine_Reply_MinuteData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026MinuteLine_Reply.proto\"\337\001\n\020MinuteLine_" +
      "Reply\0220\n\ntrend_line\030\006 \003(\0132\034.MinuteLine_R" +
      "eply.MinuteData\022\r\n\005close\030\007 \002(\r\022\020\n\010goods_" +
      "id\030\010 \002(\r\022\023\n\013market_date\030\t \002(\r\022\013\n\003mmp\030\n \003" +
      "(\r\032V\n\nMinuteData\022\014\n\004time\030\001 \002(\r\022\r\n\005price\030" +
      "\002 \002(\r\022\013\n\003ave\030\003 \002(\r\022\016\n\006volume\030\004 \002(\004\022\016\n\006am" +
      "ount\030\005 \002(\004"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_MinuteLine_Reply_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_MinuteLine_Reply_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MinuteLine_Reply_descriptor,
              new java.lang.String[] { "TrendLine", "Close", "GoodsId", "MarketDate", "Mmp", });
          internal_static_MinuteLine_Reply_MinuteData_descriptor =
            internal_static_MinuteLine_Reply_descriptor.getNestedTypes().get(0);
          internal_static_MinuteLine_Reply_MinuteData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MinuteLine_Reply_MinuteData_descriptor,
              new java.lang.String[] { "Time", "Price", "Ave", "Volume", "Amount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
