package cn.emoney.acg.data.protocol.quote;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Indicator_Reply.proto

public final class IndicatorReply {
  private IndicatorReply() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface pointOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 value = 1;
    /**
     * <code>optional int32 value = 1;</code>
     *
     * <pre>
     *y坐标, 无此值时跳过此点
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>optional int32 value = 1;</code>
     *
     * <pre>
     *y坐标, 无此值时跳过此点
     * </pre>
     */
    int getValue();
  }
  /**
   * Protobuf type {@code point}
   *
   * <pre>
   * 线上的点的定义 
   * </pre>
   */
  public static final class point extends
      com.google.protobuf.GeneratedMessage
      implements pointOrBuilder {
    // Use point.newBuilder() to construct.
    private point(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private point(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final point defaultInstance;
    public static point getDefaultInstance() {
      return defaultInstance;
    }

    public point getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private point(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              value_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return IndicatorReply.internal_static_point_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return IndicatorReply.internal_static_point_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IndicatorReply.point.class, IndicatorReply.point.Builder.class);
    }

    public static com.google.protobuf.Parser<point> PARSER =
        new com.google.protobuf.AbstractParser<point>() {
      public point parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new point(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<point> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private int value_;
    /**
     * <code>optional int32 value = 1;</code>
     *
     * <pre>
     *y坐标, 无此值时跳过此点
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 value = 1;</code>
     *
     * <pre>
     *y坐标, 无此值时跳过此点
     * </pre>
     */
    public int getValue() {
      return value_;
    }

    private void initFields() {
      value_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static IndicatorReply.point parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IndicatorReply.point parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IndicatorReply.point parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IndicatorReply.point parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IndicatorReply.point parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static IndicatorReply.point parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static IndicatorReply.point parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static IndicatorReply.point parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static IndicatorReply.point parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static IndicatorReply.point parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(IndicatorReply.point prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code point}
     *
     * <pre>
     * 线上的点的定义 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements IndicatorReply.pointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return IndicatorReply.internal_static_point_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return IndicatorReply.internal_static_point_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                IndicatorReply.point.class, IndicatorReply.point.Builder.class);
      }

      // Construct using IndicatorReply.point.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return IndicatorReply.internal_static_point_descriptor;
      }

      public IndicatorReply.point getDefaultInstanceForType() {
        return IndicatorReply.point.getDefaultInstance();
      }

      public IndicatorReply.point build() {
        IndicatorReply.point result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public IndicatorReply.point buildPartial() {
        IndicatorReply.point result = new IndicatorReply.point(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof IndicatorReply.point) {
          return mergeFrom((IndicatorReply.point)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(IndicatorReply.point other) {
        if (other == IndicatorReply.point.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        IndicatorReply.point parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (IndicatorReply.point) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 value = 1;
      private int value_ ;
      /**
       * <code>optional int32 value = 1;</code>
       *
       * <pre>
       *y坐标, 无此值时跳过此点
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 value = 1;</code>
       *
       * <pre>
       *y坐标, 无此值时跳过此点
       * </pre>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional int32 value = 1;</code>
       *
       * <pre>
       *y坐标, 无此值时跳过此点
       * </pre>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 value = 1;</code>
       *
       * <pre>
       *y坐标, 无此值时跳过此点
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:point)
    }

    static {
      defaultInstance = new point(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:point)
  }

  public interface lineOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *线名
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *线名
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *线名
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required uint32 type = 2;
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     *线型 1-柱状 2-细柱 3-折线图 100-参考线
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     *线型 1-柱状 2-细柱 3-折线图 100-参考线
     * </pre>
     */
    int getType();

    // repeated .point points = 3;
    /**
     * <code>repeated .point points = 3;</code>
     *
     * <pre>
     *点
     * </pre>
     */
    java.util.List<IndicatorReply.point> 
        getPointsList();
    /**
     * <code>repeated .point points = 3;</code>
     *
     * <pre>
     *点
     * </pre>
     */
    IndicatorReply.point getPoints(int index);
    /**
     * <code>repeated .point points = 3;</code>
     *
     * <pre>
     *点
     * </pre>
     */
    int getPointsCount();
    /**
     * <code>repeated .point points = 3;</code>
     *
     * <pre>
     *点
     * </pre>
     */
    java.util.List<? extends IndicatorReply.pointOrBuilder> 
        getPointsOrBuilderList();
    /**
     * <code>repeated .point points = 3;</code>
     *
     * <pre>
     *点
     * </pre>
     */
    IndicatorReply.pointOrBuilder getPointsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code line}
   *
   * <pre>
   * 线定义 
   * </pre>
   */
  public static final class line extends
      com.google.protobuf.GeneratedMessage
      implements lineOrBuilder {
    // Use line.newBuilder() to construct.
    private line(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private line(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final line defaultInstance;
    public static line getDefaultInstance() {
      return defaultInstance;
    }

    public line getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private line(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                points_ = new java.util.ArrayList<IndicatorReply.point>();
                mutable_bitField0_ |= 0x00000004;
              }
              points_.add(input.readMessage(IndicatorReply.point.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return IndicatorReply.internal_static_line_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return IndicatorReply.internal_static_line_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IndicatorReply.line.class, IndicatorReply.line.Builder.class);
    }

    public static com.google.protobuf.Parser<line> PARSER =
        new com.google.protobuf.AbstractParser<line>() {
      public line parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new line(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<line> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *线名
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *线名
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *线名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     *线型 1-柱状 2-细柱 3-折线图 100-参考线
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     *线型 1-柱状 2-细柱 3-折线图 100-参考线
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // repeated .point points = 3;
    public static final int POINTS_FIELD_NUMBER = 3;
    private java.util.List<IndicatorReply.point> points_;
    /**
     * <code>repeated .point points = 3;</code>
     *
     * <pre>
     *点
     * </pre>
     */
    public java.util.List<IndicatorReply.point> getPointsList() {
      return points_;
    }
    /**
     * <code>repeated .point points = 3;</code>
     *
     * <pre>
     *点
     * </pre>
     */
    public java.util.List<? extends IndicatorReply.pointOrBuilder> 
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <code>repeated .point points = 3;</code>
     *
     * <pre>
     *点
     * </pre>
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <code>repeated .point points = 3;</code>
     *
     * <pre>
     *点
     * </pre>
     */
    public IndicatorReply.point getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <code>repeated .point points = 3;</code>
     *
     * <pre>
     *点
     * </pre>
     */
    public IndicatorReply.pointOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    private void initFields() {
      name_ = "";
      type_ = 0;
      points_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, type_);
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(3, points_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, type_);
      }
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, points_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static IndicatorReply.line parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IndicatorReply.line parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IndicatorReply.line parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IndicatorReply.line parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IndicatorReply.line parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static IndicatorReply.line parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static IndicatorReply.line parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static IndicatorReply.line parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static IndicatorReply.line parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static IndicatorReply.line parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(IndicatorReply.line prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code line}
     *
     * <pre>
     * 线定义 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements IndicatorReply.lineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return IndicatorReply.internal_static_line_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return IndicatorReply.internal_static_line_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                IndicatorReply.line.class, IndicatorReply.line.Builder.class);
      }

      // Construct using IndicatorReply.line.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPointsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return IndicatorReply.internal_static_line_descriptor;
      }

      public IndicatorReply.line getDefaultInstanceForType() {
        return IndicatorReply.line.getDefaultInstance();
      }

      public IndicatorReply.line build() {
        IndicatorReply.line result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public IndicatorReply.line buildPartial() {
        IndicatorReply.line result = new IndicatorReply.line(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (pointsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            points_ = java.util.Collections.unmodifiableList(points_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.points_ = points_;
        } else {
          result.points_ = pointsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof IndicatorReply.line) {
          return mergeFrom((IndicatorReply.line)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(IndicatorReply.line other) {
        if (other == IndicatorReply.line.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (pointsBuilder_ == null) {
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
        } else {
          if (!other.points_.isEmpty()) {
            if (pointsBuilder_.isEmpty()) {
              pointsBuilder_.dispose();
              pointsBuilder_ = null;
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000004);
              pointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPointsFieldBuilder() : null;
            } else {
              pointsBuilder_.addAllMessages(other.points_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        IndicatorReply.line parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (IndicatorReply.line) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *线名
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *线名
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *线名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *线名
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *线名
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *线名
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required uint32 type = 2;
      private int type_ ;
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       *线型 1-柱状 2-细柱 3-折线图 100-参考线
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       *线型 1-柱状 2-细柱 3-折线图 100-参考线
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       *线型 1-柱状 2-细柱 3-折线图 100-参考线
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       *线型 1-柱状 2-细柱 3-折线图 100-参考线
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // repeated .point points = 3;
      private java.util.List<IndicatorReply.point> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          points_ = new java.util.ArrayList<IndicatorReply.point>(points_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          IndicatorReply.point, IndicatorReply.point.Builder, IndicatorReply.pointOrBuilder> pointsBuilder_;

      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public java.util.List<IndicatorReply.point> getPointsList() {
        if (pointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(points_);
        } else {
          return pointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public int getPointsCount() {
        if (pointsBuilder_ == null) {
          return points_.size();
        } else {
          return pointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public IndicatorReply.point getPoints(int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);
        } else {
          return pointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public Builder setPoints(
          int index, IndicatorReply.point value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.set(index, value);
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public Builder setPoints(
          int index, IndicatorReply.point.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public Builder addPoints(IndicatorReply.point value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public Builder addPoints(
          int index, IndicatorReply.point value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(index, value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public Builder addPoints(
          IndicatorReply.point.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public Builder addPoints(
          int index, IndicatorReply.point.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends IndicatorReply.point> values) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          super.addAll(values, points_);
          onChanged();
        } else {
          pointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public Builder clearPoints() {
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public Builder removePoints(int index) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.remove(index);
          onChanged();
        } else {
          pointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public IndicatorReply.point.Builder getPointsBuilder(
          int index) {
        return getPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public IndicatorReply.pointOrBuilder getPointsOrBuilder(
          int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);  } else {
          return pointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public java.util.List<? extends IndicatorReply.pointOrBuilder> 
           getPointsOrBuilderList() {
        if (pointsBuilder_ != null) {
          return pointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(points_);
        }
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public IndicatorReply.point.Builder addPointsBuilder() {
        return getPointsFieldBuilder().addBuilder(
            IndicatorReply.point.getDefaultInstance());
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public IndicatorReply.point.Builder addPointsBuilder(
          int index) {
        return getPointsFieldBuilder().addBuilder(
            index, IndicatorReply.point.getDefaultInstance());
      }
      /**
       * <code>repeated .point points = 3;</code>
       *
       * <pre>
       *点
       * </pre>
       */
      public java.util.List<IndicatorReply.point.Builder> 
           getPointsBuilderList() {
        return getPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          IndicatorReply.point, IndicatorReply.point.Builder, IndicatorReply.pointOrBuilder> 
          getPointsFieldBuilder() {
        if (pointsBuilder_ == null) {
          pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              IndicatorReply.point, IndicatorReply.point.Builder, IndicatorReply.pointOrBuilder>(
                  points_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          points_ = null;
        }
        return pointsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:line)
    }

    static {
      defaultInstance = new line(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:line)
  }

  public interface Indicator_ReplyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 goods_id = 1;
    /**
     * <code>required uint32 goods_id = 1;</code>
     *
     * <pre>
     *股票id
     * </pre>
     */
    boolean hasGoodsId();
    /**
     * <code>required uint32 goods_id = 1;</code>
     *
     * <pre>
     *股票id
     * </pre>
     */
    int getGoodsId();

    // required uint32 indicator_id = 2;
    /**
     * <code>required uint32 indicator_id = 2;</code>
     *
     * <pre>
     *指标id
     * </pre>
     */
    boolean hasIndicatorId();
    /**
     * <code>required uint32 indicator_id = 2;</code>
     *
     * <pre>
     *指标id
     * </pre>
     */
    int getIndicatorId();

    // required uint32 cycle = 3;
    /**
     * <code>required uint32 cycle = 3;</code>
     *
     * <pre>
     *周期
     * </pre>
     */
    boolean hasCycle();
    /**
     * <code>required uint32 cycle = 3;</code>
     *
     * <pre>
     *周期
     * </pre>
     */
    int getCycle();

    // repeated uint32 key = 4;
    /**
     * <code>repeated uint32 key = 4;</code>
     *
     * <pre>
     *公用横坐标
     * </pre>
     */
    java.util.List<java.lang.Integer> getKeyList();
    /**
     * <code>repeated uint32 key = 4;</code>
     *
     * <pre>
     *公用横坐标
     * </pre>
     */
    int getKeyCount();
    /**
     * <code>repeated uint32 key = 4;</code>
     *
     * <pre>
     *公用横坐标
     * </pre>
     */
    int getKey(int index);

    // optional int32 rate = 5;
    /**
     * <code>optional int32 rate = 5;</code>
     *
     * <pre>
     *-:表示数据已除过  +：表示已乘过 ，无此值表示无倍率
     * </pre>
     */
    boolean hasRate();
    /**
     * <code>optional int32 rate = 5;</code>
     *
     * <pre>
     *-:表示数据已除过  +：表示已乘过 ，无此值表示无倍率
     * </pre>
     */
    int getRate();

    // repeated .line lines = 6;
    /**
     * <code>repeated .line lines = 6;</code>
     *
     * <pre>
     *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
     * </pre>
     */
    java.util.List<IndicatorReply.line> 
        getLinesList();
    /**
     * <code>repeated .line lines = 6;</code>
     *
     * <pre>
     *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
     * </pre>
     */
    IndicatorReply.line getLines(int index);
    /**
     * <code>repeated .line lines = 6;</code>
     *
     * <pre>
     *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
     * </pre>
     */
    int getLinesCount();
    /**
     * <code>repeated .line lines = 6;</code>
     *
     * <pre>
     *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
     * </pre>
     */
    java.util.List<? extends IndicatorReply.lineOrBuilder> 
        getLinesOrBuilderList();
    /**
     * <code>repeated .line lines = 6;</code>
     *
     * <pre>
     *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
     * </pre>
     */
    IndicatorReply.lineOrBuilder getLinesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Indicator_Reply}
   */
  public static final class Indicator_Reply extends
      com.google.protobuf.GeneratedMessage
      implements Indicator_ReplyOrBuilder {
    // Use Indicator_Reply.newBuilder() to construct.
    private Indicator_Reply(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Indicator_Reply(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Indicator_Reply defaultInstance;
    public static Indicator_Reply getDefaultInstance() {
      return defaultInstance;
    }

    public Indicator_Reply getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Indicator_Reply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              goodsId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              indicatorId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cycle_ = input.readUInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                key_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              key_.add(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                key_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                key_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              rate_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                lines_ = new java.util.ArrayList<IndicatorReply.line>();
                mutable_bitField0_ |= 0x00000020;
              }
              lines_.add(input.readMessage(IndicatorReply.line.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          key_ = java.util.Collections.unmodifiableList(key_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          lines_ = java.util.Collections.unmodifiableList(lines_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return IndicatorReply.internal_static_Indicator_Reply_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return IndicatorReply.internal_static_Indicator_Reply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IndicatorReply.Indicator_Reply.class, IndicatorReply.Indicator_Reply.Builder.class);
    }

    public static com.google.protobuf.Parser<Indicator_Reply> PARSER =
        new com.google.protobuf.AbstractParser<Indicator_Reply>() {
      public Indicator_Reply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Indicator_Reply(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Indicator_Reply> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 goods_id = 1;
    public static final int GOODS_ID_FIELD_NUMBER = 1;
    private int goodsId_;
    /**
     * <code>required uint32 goods_id = 1;</code>
     *
     * <pre>
     *股票id
     * </pre>
     */
    public boolean hasGoodsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 goods_id = 1;</code>
     *
     * <pre>
     *股票id
     * </pre>
     */
    public int getGoodsId() {
      return goodsId_;
    }

    // required uint32 indicator_id = 2;
    public static final int INDICATOR_ID_FIELD_NUMBER = 2;
    private int indicatorId_;
    /**
     * <code>required uint32 indicator_id = 2;</code>
     *
     * <pre>
     *指标id
     * </pre>
     */
    public boolean hasIndicatorId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 indicator_id = 2;</code>
     *
     * <pre>
     *指标id
     * </pre>
     */
    public int getIndicatorId() {
      return indicatorId_;
    }

    // required uint32 cycle = 3;
    public static final int CYCLE_FIELD_NUMBER = 3;
    private int cycle_;
    /**
     * <code>required uint32 cycle = 3;</code>
     *
     * <pre>
     *周期
     * </pre>
     */
    public boolean hasCycle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 cycle = 3;</code>
     *
     * <pre>
     *周期
     * </pre>
     */
    public int getCycle() {
      return cycle_;
    }

    // repeated uint32 key = 4;
    public static final int KEY_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> key_;
    /**
     * <code>repeated uint32 key = 4;</code>
     *
     * <pre>
     *公用横坐标
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getKeyList() {
      return key_;
    }
    /**
     * <code>repeated uint32 key = 4;</code>
     *
     * <pre>
     *公用横坐标
     * </pre>
     */
    public int getKeyCount() {
      return key_.size();
    }
    /**
     * <code>repeated uint32 key = 4;</code>
     *
     * <pre>
     *公用横坐标
     * </pre>
     */
    public int getKey(int index) {
      return key_.get(index);
    }

    // optional int32 rate = 5;
    public static final int RATE_FIELD_NUMBER = 5;
    private int rate_;
    /**
     * <code>optional int32 rate = 5;</code>
     *
     * <pre>
     *-:表示数据已除过  +：表示已乘过 ，无此值表示无倍率
     * </pre>
     */
    public boolean hasRate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 rate = 5;</code>
     *
     * <pre>
     *-:表示数据已除过  +：表示已乘过 ，无此值表示无倍率
     * </pre>
     */
    public int getRate() {
      return rate_;
    }

    // repeated .line lines = 6;
    public static final int LINES_FIELD_NUMBER = 6;
    private java.util.List<IndicatorReply.line> lines_;
    /**
     * <code>repeated .line lines = 6;</code>
     *
     * <pre>
     *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
     * </pre>
     */
    public java.util.List<IndicatorReply.line> getLinesList() {
      return lines_;
    }
    /**
     * <code>repeated .line lines = 6;</code>
     *
     * <pre>
     *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
     * </pre>
     */
    public java.util.List<? extends IndicatorReply.lineOrBuilder> 
        getLinesOrBuilderList() {
      return lines_;
    }
    /**
     * <code>repeated .line lines = 6;</code>
     *
     * <pre>
     *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
     * </pre>
     */
    public int getLinesCount() {
      return lines_.size();
    }
    /**
     * <code>repeated .line lines = 6;</code>
     *
     * <pre>
     *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
     * </pre>
     */
    public IndicatorReply.line getLines(int index) {
      return lines_.get(index);
    }
    /**
     * <code>repeated .line lines = 6;</code>
     *
     * <pre>
     *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
     * </pre>
     */
    public IndicatorReply.lineOrBuilder getLinesOrBuilder(
        int index) {
      return lines_.get(index);
    }

    private void initFields() {
      goodsId_ = 0;
      indicatorId_ = 0;
      cycle_ = 0;
      key_ = java.util.Collections.emptyList();
      rate_ = 0;
      lines_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGoodsId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIndicatorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCycle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getLinesCount(); i++) {
        if (!getLines(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, goodsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, indicatorId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, cycle_);
      }
      for (int i = 0; i < key_.size(); i++) {
        output.writeUInt32(4, key_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, rate_);
      }
      for (int i = 0; i < lines_.size(); i++) {
        output.writeMessage(6, lines_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, goodsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, indicatorId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, cycle_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < key_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(key_.get(i));
        }
        size += dataSize;
        size += 1 * getKeyList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, rate_);
      }
      for (int i = 0; i < lines_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, lines_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static IndicatorReply.Indicator_Reply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IndicatorReply.Indicator_Reply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IndicatorReply.Indicator_Reply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IndicatorReply.Indicator_Reply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IndicatorReply.Indicator_Reply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static IndicatorReply.Indicator_Reply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static IndicatorReply.Indicator_Reply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static IndicatorReply.Indicator_Reply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static IndicatorReply.Indicator_Reply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static IndicatorReply.Indicator_Reply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(IndicatorReply.Indicator_Reply prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Indicator_Reply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements IndicatorReply.Indicator_ReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return IndicatorReply.internal_static_Indicator_Reply_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return IndicatorReply.internal_static_Indicator_Reply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                IndicatorReply.Indicator_Reply.class, IndicatorReply.Indicator_Reply.Builder.class);
      }

      // Construct using IndicatorReply.Indicator_Reply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLinesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        goodsId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        indicatorId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cycle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        key_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        rate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (linesBuilder_ == null) {
          lines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          linesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return IndicatorReply.internal_static_Indicator_Reply_descriptor;
      }

      public IndicatorReply.Indicator_Reply getDefaultInstanceForType() {
        return IndicatorReply.Indicator_Reply.getDefaultInstance();
      }

      public IndicatorReply.Indicator_Reply build() {
        IndicatorReply.Indicator_Reply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public IndicatorReply.Indicator_Reply buildPartial() {
        IndicatorReply.Indicator_Reply result = new IndicatorReply.Indicator_Reply(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.goodsId_ = goodsId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.indicatorId_ = indicatorId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cycle_ = cycle_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          key_ = java.util.Collections.unmodifiableList(key_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rate_ = rate_;
        if (linesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            lines_ = java.util.Collections.unmodifiableList(lines_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.lines_ = lines_;
        } else {
          result.lines_ = linesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof IndicatorReply.Indicator_Reply) {
          return mergeFrom((IndicatorReply.Indicator_Reply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(IndicatorReply.Indicator_Reply other) {
        if (other == IndicatorReply.Indicator_Reply.getDefaultInstance()) return this;
        if (other.hasGoodsId()) {
          setGoodsId(other.getGoodsId());
        }
        if (other.hasIndicatorId()) {
          setIndicatorId(other.getIndicatorId());
        }
        if (other.hasCycle()) {
          setCycle(other.getCycle());
        }
        if (!other.key_.isEmpty()) {
          if (key_.isEmpty()) {
            key_ = other.key_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureKeyIsMutable();
            key_.addAll(other.key_);
          }
          onChanged();
        }
        if (other.hasRate()) {
          setRate(other.getRate());
        }
        if (linesBuilder_ == null) {
          if (!other.lines_.isEmpty()) {
            if (lines_.isEmpty()) {
              lines_ = other.lines_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureLinesIsMutable();
              lines_.addAll(other.lines_);
            }
            onChanged();
          }
        } else {
          if (!other.lines_.isEmpty()) {
            if (linesBuilder_.isEmpty()) {
              linesBuilder_.dispose();
              linesBuilder_ = null;
              lines_ = other.lines_;
              bitField0_ = (bitField0_ & ~0x00000020);
              linesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLinesFieldBuilder() : null;
            } else {
              linesBuilder_.addAllMessages(other.lines_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGoodsId()) {
          
          return false;
        }
        if (!hasIndicatorId()) {
          
          return false;
        }
        if (!hasCycle()) {
          
          return false;
        }
        for (int i = 0; i < getLinesCount(); i++) {
          if (!getLines(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        IndicatorReply.Indicator_Reply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (IndicatorReply.Indicator_Reply) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 goods_id = 1;
      private int goodsId_ ;
      /**
       * <code>required uint32 goods_id = 1;</code>
       *
       * <pre>
       *股票id
       * </pre>
       */
      public boolean hasGoodsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 goods_id = 1;</code>
       *
       * <pre>
       *股票id
       * </pre>
       */
      public int getGoodsId() {
        return goodsId_;
      }
      /**
       * <code>required uint32 goods_id = 1;</code>
       *
       * <pre>
       *股票id
       * </pre>
       */
      public Builder setGoodsId(int value) {
        bitField0_ |= 0x00000001;
        goodsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 goods_id = 1;</code>
       *
       * <pre>
       *股票id
       * </pre>
       */
      public Builder clearGoodsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        goodsId_ = 0;
        onChanged();
        return this;
      }

      // required uint32 indicator_id = 2;
      private int indicatorId_ ;
      /**
       * <code>required uint32 indicator_id = 2;</code>
       *
       * <pre>
       *指标id
       * </pre>
       */
      public boolean hasIndicatorId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 indicator_id = 2;</code>
       *
       * <pre>
       *指标id
       * </pre>
       */
      public int getIndicatorId() {
        return indicatorId_;
      }
      /**
       * <code>required uint32 indicator_id = 2;</code>
       *
       * <pre>
       *指标id
       * </pre>
       */
      public Builder setIndicatorId(int value) {
        bitField0_ |= 0x00000002;
        indicatorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 indicator_id = 2;</code>
       *
       * <pre>
       *指标id
       * </pre>
       */
      public Builder clearIndicatorId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        indicatorId_ = 0;
        onChanged();
        return this;
      }

      // required uint32 cycle = 3;
      private int cycle_ ;
      /**
       * <code>required uint32 cycle = 3;</code>
       *
       * <pre>
       *周期
       * </pre>
       */
      public boolean hasCycle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 cycle = 3;</code>
       *
       * <pre>
       *周期
       * </pre>
       */
      public int getCycle() {
        return cycle_;
      }
      /**
       * <code>required uint32 cycle = 3;</code>
       *
       * <pre>
       *周期
       * </pre>
       */
      public Builder setCycle(int value) {
        bitField0_ |= 0x00000004;
        cycle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 cycle = 3;</code>
       *
       * <pre>
       *周期
       * </pre>
       */
      public Builder clearCycle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cycle_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 key = 4;
      private java.util.List<java.lang.Integer> key_ = java.util.Collections.emptyList();
      private void ensureKeyIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          key_ = new java.util.ArrayList<java.lang.Integer>(key_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated uint32 key = 4;</code>
       *
       * <pre>
       *公用横坐标
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getKeyList() {
        return java.util.Collections.unmodifiableList(key_);
      }
      /**
       * <code>repeated uint32 key = 4;</code>
       *
       * <pre>
       *公用横坐标
       * </pre>
       */
      public int getKeyCount() {
        return key_.size();
      }
      /**
       * <code>repeated uint32 key = 4;</code>
       *
       * <pre>
       *公用横坐标
       * </pre>
       */
      public int getKey(int index) {
        return key_.get(index);
      }
      /**
       * <code>repeated uint32 key = 4;</code>
       *
       * <pre>
       *公用横坐标
       * </pre>
       */
      public Builder setKey(
          int index, int value) {
        ensureKeyIsMutable();
        key_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 key = 4;</code>
       *
       * <pre>
       *公用横坐标
       * </pre>
       */
      public Builder addKey(int value) {
        ensureKeyIsMutable();
        key_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 key = 4;</code>
       *
       * <pre>
       *公用横坐标
       * </pre>
       */
      public Builder addAllKey(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureKeyIsMutable();
        super.addAll(values, key_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 key = 4;</code>
       *
       * <pre>
       *公用横坐标
       * </pre>
       */
      public Builder clearKey() {
        key_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 rate = 5;
      private int rate_ ;
      /**
       * <code>optional int32 rate = 5;</code>
       *
       * <pre>
       *-:表示数据已除过  +：表示已乘过 ，无此值表示无倍率
       * </pre>
       */
      public boolean hasRate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 rate = 5;</code>
       *
       * <pre>
       *-:表示数据已除过  +：表示已乘过 ，无此值表示无倍率
       * </pre>
       */
      public int getRate() {
        return rate_;
      }
      /**
       * <code>optional int32 rate = 5;</code>
       *
       * <pre>
       *-:表示数据已除过  +：表示已乘过 ，无此值表示无倍率
       * </pre>
       */
      public Builder setRate(int value) {
        bitField0_ |= 0x00000010;
        rate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rate = 5;</code>
       *
       * <pre>
       *-:表示数据已除过  +：表示已乘过 ，无此值表示无倍率
       * </pre>
       */
      public Builder clearRate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rate_ = 0;
        onChanged();
        return this;
      }

      // repeated .line lines = 6;
      private java.util.List<IndicatorReply.line> lines_ =
        java.util.Collections.emptyList();
      private void ensureLinesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          lines_ = new java.util.ArrayList<IndicatorReply.line>(lines_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          IndicatorReply.line, IndicatorReply.line.Builder, IndicatorReply.lineOrBuilder> linesBuilder_;

      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public java.util.List<IndicatorReply.line> getLinesList() {
        if (linesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lines_);
        } else {
          return linesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public int getLinesCount() {
        if (linesBuilder_ == null) {
          return lines_.size();
        } else {
          return linesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public IndicatorReply.line getLines(int index) {
        if (linesBuilder_ == null) {
          return lines_.get(index);
        } else {
          return linesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public Builder setLines(
          int index, IndicatorReply.line value) {
        if (linesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinesIsMutable();
          lines_.set(index, value);
          onChanged();
        } else {
          linesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public Builder setLines(
          int index, IndicatorReply.line.Builder builderForValue) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.set(index, builderForValue.build());
          onChanged();
        } else {
          linesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public Builder addLines(IndicatorReply.line value) {
        if (linesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinesIsMutable();
          lines_.add(value);
          onChanged();
        } else {
          linesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public Builder addLines(
          int index, IndicatorReply.line value) {
        if (linesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinesIsMutable();
          lines_.add(index, value);
          onChanged();
        } else {
          linesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public Builder addLines(
          IndicatorReply.line.Builder builderForValue) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.add(builderForValue.build());
          onChanged();
        } else {
          linesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public Builder addLines(
          int index, IndicatorReply.line.Builder builderForValue) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.add(index, builderForValue.build());
          onChanged();
        } else {
          linesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public Builder addAllLines(
          java.lang.Iterable<? extends IndicatorReply.line> values) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          super.addAll(values, lines_);
          onChanged();
        } else {
          linesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public Builder clearLines() {
        if (linesBuilder_ == null) {
          lines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          linesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public Builder removeLines(int index) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.remove(index);
          onChanged();
        } else {
          linesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public IndicatorReply.line.Builder getLinesBuilder(
          int index) {
        return getLinesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public IndicatorReply.lineOrBuilder getLinesOrBuilder(
          int index) {
        if (linesBuilder_ == null) {
          return lines_.get(index);  } else {
          return linesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public java.util.List<? extends IndicatorReply.lineOrBuilder> 
           getLinesOrBuilderList() {
        if (linesBuilder_ != null) {
          return linesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lines_);
        }
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public IndicatorReply.line.Builder addLinesBuilder() {
        return getLinesFieldBuilder().addBuilder(
            IndicatorReply.line.getDefaultInstance());
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public IndicatorReply.line.Builder addLinesBuilder(
          int index) {
        return getLinesFieldBuilder().addBuilder(
            index, IndicatorReply.line.getDefaultInstance());
      }
      /**
       * <code>repeated .line lines = 6;</code>
       *
       * <pre>
       *线的数组, 每个元素表示一条线  0 -- index 对应最下层到最上层
       * </pre>
       */
      public java.util.List<IndicatorReply.line.Builder> 
           getLinesBuilderList() {
        return getLinesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          IndicatorReply.line, IndicatorReply.line.Builder, IndicatorReply.lineOrBuilder> 
          getLinesFieldBuilder() {
        if (linesBuilder_ == null) {
          linesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              IndicatorReply.line, IndicatorReply.line.Builder, IndicatorReply.lineOrBuilder>(
                  lines_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          lines_ = null;
        }
        return linesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Indicator_Reply)
    }

    static {
      defaultInstance = new Indicator_Reply(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Indicator_Reply)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_point_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_point_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_line_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_line_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Indicator_Reply_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Indicator_Reply_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025Indicator_Reply.proto\"\026\n\005point\022\r\n\005valu" +
      "e\030\001 \001(\005\":\n\004line\022\014\n\004name\030\001 \002(\t\022\014\n\004type\030\002 " +
      "\002(\r\022\026\n\006points\030\003 \003(\0132\006.point\"y\n\017Indicator" +
      "_Reply\022\020\n\010goods_id\030\001 \002(\r\022\024\n\014indicator_id" +
      "\030\002 \002(\r\022\r\n\005cycle\030\003 \002(\r\022\013\n\003key\030\004 \003(\r\022\014\n\004ra" +
      "te\030\005 \001(\005\022\024\n\005lines\030\006 \003(\0132\005.line"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_point_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_point_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_point_descriptor,
              new java.lang.String[] { "Value", });
          internal_static_line_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_line_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_line_descriptor,
              new java.lang.String[] { "Name", "Type", "Points", });
          internal_static_Indicator_Reply_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Indicator_Reply_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Indicator_Reply_descriptor,
              new java.lang.String[] { "GoodsId", "IndicatorId", "Cycle", "Key", "Rate", "Lines", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
